package org.example;


import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ComponentScan;

/*
            ---- Разобраться с liquibase. ----

            Наполнить данными через него.
* 1) Проверить как работает каждый CRUD метод.

* 2)
* удаление аккаунта сделать проверку есть ли на аккаунте деньги если есть то
перевести его на другой аккаунт. Или сделать какую-то логику.

* 3) Добавить аннотацию @Transactional в класс TransactionServiceImpl.
И проверить как это работает.
Сделать logger для пакета контроллер и сервис. (Пересмотри урок с AOP и урок с 24.08)

* 4) Уметь объяснить всё что ты написал.

* 5) Написать как можно большое простых тестов на основные методы.

* 6) Написать сервис который мы будем проходить 31.08.2023.
Это означает что я напишу реализацию регистрации и авторизации и для конкретного клиента сделаю
доступным несколько методов, а все остальные буду заблокированы.

* 7) Просмотреть материал для защиты проекта.
* 8) Проработать вопросы, которые могут быть на защите.
* 9) Подготовить не большую презентацию. И вообще отработать то как я буду презентовать проект.
*/


/*
Вопросы учителю.
1) При генерации уникального ключа с помощью @GeneratedValue(strategy = GenerationType.IDENTITY),
при попытке создание клиента, через пост метод, он ищет таблицу с окончанием _seq.
Что это и как это исправить?

 */


/*
И так, то что я могу не успеть.

1) Токины для сервиса. Их как минимум нужно изучить.
2) Прочитать как правильно нужно называть id в liquibase.
3) Написать тесты на все методы.
4) Я до конца не понимаю как должны правильно работать транзакции,
по этому скорее всего их нужно будет доработать.
5) Также я скорее всего не смогу реализовать все технологии.
Под конец проекта, нужно выделить те технологии которые не войдут в мой проект
и позже их разобрать. И в теории можно даже добавить в мой проект позже.
6) Моему проекту есть куда расти, нужно для презентации выделить моменты
которые можно будет реализовать в будущем.
7) Так же я скорее всего не успею наполнить базу данных, большим количеством
данных. Хоть это для защиты и не нужно наверное, что бы не запутаться.
Но с большим количеством данных можно будет проверять новые методы более тщательно.
*/



//Я закончил на 55:52 на конфигурации!! Давай нахуй!!!!

// Строки нахуй.
// Придерживаться определённого стиля.
@SpringBootApplication
public class BankApp {
    public static void main(String[] args) {
        SpringApplication.run(BankApp.class,args);
    }
}